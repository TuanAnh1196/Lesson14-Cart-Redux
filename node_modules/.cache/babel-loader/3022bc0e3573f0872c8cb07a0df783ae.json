{"ast":null,"code":"import _defineProperty from \"/Users/tinhphan/Workspace/PSCD/Training/reactjs/tuan-anh/Lesson14-Cart-Redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var product = action.product,\n      quantity = action.quantity;\n  var index = -1; //khong tim thay\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      // index = findProductInCart(state, product);\n      // if (index !== -1) {\n      //   state[index].quantity += quantity; //neu co roi thi tang so luong\n      // } else {\n      //   state.push({\n      //     product,\n      //     quantity\n      //   });\n      // }\n      // // localStorage.setItem('CART', JSON.stringify(state));\n      // return [...state];\n      const newState = [...state, {\n        product,\n        quantity\n      }];\n      localStorage.setItem('CART', JSON.stringify(newState));\n      return newState;\n\n    case types.DELETE_PRODUCT_IN_CART:\n      // index = findProductInCart(state, product);\n      return state.filter(item => item.product.id !== product.id);\n    // if (index !== -1) {\n    //   state.splice(index, 1);\n    // }\n    // // localStorage.setItem('CART', JSON.stringify(state));\n    // return [...state];\n\n    case types.UPDATE_PRODUCT_IN_CART:\n      // index = findProductInCart(state, product);\n      // if (index !== -1) {\n      //   state[index].quantity = quantity;\n      // }\n      // localStorage.setItem('CART', JSON.stringify(state));\n      return state.map((item, index) => {\n        if (item.product.id === product.id) {\n          return _objectSpread({}, item, {\n            quantity\n          });\n        }\n\n        return item;\n      });\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProductInCart = (cart, product) => {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/tinhphan/Workspace/PSCD/Training/reactjs/tuan-anh/Lesson14-Cart-Redux/src/reducers/cart.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","newState","setItem","stringify","DELETE_PRODUCT_IN_CART","filter","item","id","UPDATE_PRODUCT_IN_CART","map","findProductInCart","length","i"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAAA,MACvCC,OADuC,GACjBD,MADiB,CACvCC,OADuC;AAAA,MAC9BC,QAD8B,GACjBF,MADiB,CAC9BE,QAD8B;AAE7C,MAAIC,KAAK,GAAG,CAAC,CAAb,CAF6C,CAE7B;;AAChB,UAAQH,MAAM,CAACI,IAAf;AACE,SAAKb,KAAK,CAACc,WAAX;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMC,QAAQ,GAAG,CACf,GAAGP,KADY,EAEf;AACEE,QAAAA,OADF;AAEEC,QAAAA;AAFF,OAFe,CAAjB;AAOAP,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6Bd,IAAI,CAACe,SAAL,CAAeF,QAAf,CAA7B;AACA,aAAOA,QAAP;;AAGF,SAAKf,KAAK,CAACkB,sBAAX;AACE;AACA,aAAOV,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACV,OAAL,CAAaW,EAAb,KAAoBX,OAAO,CAACW,EAAjD,CAAP;AAEA;AACA;AACA;AACA;AACA;;AAEF,SAAKrB,KAAK,CAACsB,sBAAX;AACE;AACA;AACA;AACA;AACA;AACA,aAAOd,KAAK,CAACe,GAAN,CAAU,CAACH,IAAD,EAAOR,KAAP,KAAiB;AAChC,YAAIQ,IAAI,CAACV,OAAL,CAAaW,EAAb,KAAoBX,OAAO,CAACW,EAAhC,EAAoC;AAClC,mCACKD,IADL;AAEET,YAAAA;AAFF;AAID;;AACD,eAAOS,IAAP;AACD,OARM,CAAP;;AAUF;AAAS,aAAO,CAAC,GAAGZ,KAAJ,CAAP;AApDX;AAsDD,CAzDD;;AA0DA,IAAIgB,iBAAiB,GAAG,CAACjB,IAAD,EAAOG,OAAP,KAAmB;AAEzC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AACA,MAAIL,IAAI,CAACkB,MAAL,GAAc,CAAlB,EAAqB;AACnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,IAAI,CAACkB,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,UAAInB,IAAI,CAACmB,CAAD,CAAJ,CAAQhB,OAAR,CAAgBW,EAAhB,KAAuBX,OAAO,CAACW,EAAnC,EAAuC;AACrCT,QAAAA,KAAK,GAAGc,CAAR;AACA;AACD;AACF;AACF;;AACD,SAAOd,KAAP;AACD,CAZD;;AAaA,eAAeL,IAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var { product, quantity } = action;\n  var index = -1; //khong tim thay\n  switch (action.type) {\n    case types.ADD_TO_CART:\n\n      // index = findProductInCart(state, product);\n      // if (index !== -1) {\n      //   state[index].quantity += quantity; //neu co roi thi tang so luong\n      // } else {\n      //   state.push({\n      //     product,\n      //     quantity\n      //   });\n      // }\n      // // localStorage.setItem('CART', JSON.stringify(state));\n      // return [...state];\n\n      const newState = [\n        ...state,\n        {\n          product,\n          quantity\n        }\n      ];\n      localStorage.setItem('CART', JSON.stringify(newState));\n      return newState\n\n\n    case types.DELETE_PRODUCT_IN_CART:\n      // index = findProductInCart(state, product);\n      return state.filter(item => item.product.id !== product.id);\n\n      // if (index !== -1) {\n      //   state.splice(index, 1);\n      // }\n      // // localStorage.setItem('CART', JSON.stringify(state));\n      // return [...state];\n\n    case types.UPDATE_PRODUCT_IN_CART:\n      // index = findProductInCart(state, product);\n      // if (index !== -1) {\n      //   state[index].quantity = quantity;\n      // }\n      // localStorage.setItem('CART', JSON.stringify(state));\n      return state.map((item, index) => {\n        if (item.product.id === product.id) {\n          return {\n            ...item,\n            quantity\n          }\n        }\n        return item;\n      })\n\n    default: return [...state];\n  }\n}\nvar findProductInCart = (cart, product) => {\n\n  var index = -1;\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}