{"ast":null,"code":"var _jsxFileName = \"/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Lesson14-Cart-Redux/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport * as Message from './../constants/Message';\nimport { actDeleteProductInCart, actChangeMessage } from '../actions';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var result = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, Message.MSG_CART_EMPTY));\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return React.createElement(CartItem, {\n            key: index,\n            item: item,\n            index: index,\n            onDeleteProductInCart: this.props.onDeleteProductInCart,\n            onChangeMessage: this.props.onChangMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = React.createElement(CartResult, {\n          cart: cart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var cart = this.props.cart;\n    return React.createElement(Cart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.showCartItem(cart), this.showTotalAmount(cart));\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    products: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    })).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Lesson14-Cart-Redux/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartItem","CartResult","Message","actDeleteProductInCart","actChangeMessage","CartContainer","showCartItem","cart","result","MSG_CART_EMPTY","length","map","item","index","props","onDeleteProductInCart","onChangMessage","showTotalAmount","render","propTypes","arrayOf","shape","products","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch","product","onChangeMessage","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport * as Message from'./../constants/Message';\nimport { actDeleteProductInCart, actChangeMessage } from '../actions';\n\nclass CartContainer extends Component {\n    render() {\n        var { cart } = this.props;\n        \n        return (\n           <Cart>\n               {this.showCartItem(cart)}\n               {this.showTotalAmount(cart)}\n           </Cart>\n        );\n        \n    }\n    showCartItem = (cart)=>{\n        var result = <tr><td>{Message.MSG_CART_EMPTY}</td></tr>;\n        if(cart.length >0){\n            result = cart.map((item, index)=>{\n                return (\n                    <CartItem \n                        key={index}\n                        item={item}\n                        index={index}\n                        onDeleteProductInCart={this.props.onDeleteProductInCart}\n                        onChangeMessage = {this.props.onChangMessage}\n                    />\n                );\n            });\n        }\n        return result;\n    }\n    showTotalAmount = (cart)=>{\n        var result = null ;\n        if(cart.length > 0){\n            result = <CartResult cart={cart} />\n        }\n        return result;\n\n    }\n}\n\nCartContainer.propTypes = {\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        products: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string.isRequired,\n                image: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n                price: PropTypes.number.isRequired,\n                inventory: PropTypes.number.isRequired,\n                rating: PropTypes.number.isRequired,\n            })\n        ).isRequired,\n        quantity: PropTypes.number.isRequired,\n    })\n    ).isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.cart \n    };\n};\n\nconst mapDispatchToProps = (dispatch, props)=>{\n    return {\n        onDeleteProductInCart: (product)=>{\n            dispatch(actDeleteProductInCart(product));\n        },\n        onChangeMessage: (message)=>{\n            dispatch(actChangeMessage(message));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}