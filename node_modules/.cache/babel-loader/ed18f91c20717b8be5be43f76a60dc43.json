{"ast":null,"code":"var _jsxFileName = \"/Users/tinhphan/Workspace/PSCD/Training/reactjs/tuan-anh/Lesson14-Cart-Redux/src/containers/ProductsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Product from '../components/Product';\nimport Products from '../components/Products';\nimport PropTypes from 'prop-types';\nimport { actAddToCart, actChangeMessage, actUpdateProductInCart } from './../actions/index';\n\nclass ProductsContainner extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickAddToCart = product => {\n      const productOnCart = this.props.cart.find(item => item.product.id === product.id);\n\n      if (productOnCart) {\n        // update cart\n        this.props.updateToCart(product, productOnCart.quantity + 1);\n      } else {\n        // add to cart\n        this.props.onAddToCart(product);\n      }\n    };\n  }\n\n  showProducts(products) {\n    var result = null;\n    var onChangeMessage = this.props.onChangeMessage;\n\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return React.createElement(Product, {\n          key: index,\n          product: product,\n          onAddToCart: this.handleClickAddToCart,\n          onChangeMessage: onChangeMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      });\n    }\n\n    return result;\n  }\n\n  render() {\n    var products = this.props.products;\n    return React.createElement(Products, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.showProducts(products));\n  }\n\n}\n\nProductsContainner.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired\n  })).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onAddToCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    updateToCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    },\n    onAddToCart: product => {\n      dispatch(actAddToCart(product, 1));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsContainner);","map":{"version":3,"sources":["/Users/tinhphan/Workspace/PSCD/Training/reactjs/tuan-anh/Lesson14-Cart-Redux/src/containers/ProductsContainer.js"],"names":["React","Component","connect","Product","Products","PropTypes","actAddToCart","actChangeMessage","actUpdateProductInCart","ProductsContainner","handleClickAddToCart","product","productOnCart","props","cart","find","item","id","updateToCart","quantity","onAddToCart","showProducts","products","result","onChangeMessage","length","map","index","render","propTypes","arrayOf","shape","number","isRequired","name","string","image","description","price","inventory","rating","func","mapStateToProps","state","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Product from '../components/Product';\nimport Products from '../components/Products';\nimport PropTypes from 'prop-types';\nimport { actAddToCart, actChangeMessage, actUpdateProductInCart } from './../actions/index';\n\nclass ProductsContainner extends Component {\n\n  handleClickAddToCart = (product) => {\n    const productOnCart = this.props.cart.find(item => item.product.id === product.id);\n    if (productOnCart) {\n      // update cart\n      this.props.updateToCart(product, productOnCart.quantity + 1);\n    } else {\n      // add to cart\n      this.props.onAddToCart(product);\n    }\n  }\n\n  showProducts(products) {\n    var result = null;\n    var { onChangeMessage } = this.props;\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return <Product\n          key={index}\n          product={product}\n          onAddToCart={this.handleClickAddToCart}\n          onChangeMessage={onChangeMessage}\n        />\n      })\n    }\n    return result;\n  }\n\n  render() {\n    var { products } = this.props;\n    return (\n      <Products>\n        {/* props children */}\n        {this.showProducts(products)}\n      </Products>\n    );\n  }\n}\n\nProductsContainner.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onChangeMessage: PropTypes.func.isRequired,\n  onAddToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    updateToCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    },\n    onAddToCart: (product) => {\n      dispatch(actAddToCart(product, 1));\n    },\n    onChangeMessage: (message) => {\n      dispatch(actChangeMessage(message));\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsContainner);\n"]},"metadata":{},"sourceType":"module"}