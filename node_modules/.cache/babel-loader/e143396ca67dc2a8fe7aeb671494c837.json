{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var product = action.product,\n      quantity = action.quantity;\n  var index = -1; //khong tim thay\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity; //neu co roi thi tang so luong\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n\n    case types.DELETE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity = quantity;\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProductInCart = (cart, product) => {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/tinhphan/Workspace/PSCD/Training/reactjs/tuan-anh/Lesson14-Cart-Redux/src/reducers/cart.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","findProductInCart","push","setItem","stringify","DELETE_PRODUCT_IN_CART","splice","UPDATE_PRODUCT_IN_CART","length","i","id"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAAA,MACrCC,OADqC,GAChBD,MADgB,CACrCC,OADqC;AAAA,MAC5BC,QAD4B,GAChBF,MADgB,CAC5BE,QAD4B;AAE3C,MAAIC,KAAK,GAAG,CAAC,CAAb,CAF2C,CAE3B;;AAChB,UAAQH,MAAM,CAACI,IAAf;AACI,SAAKb,KAAK,CAACc,WAAX;AACIF,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAOE,OAAP,CAAzB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB,CADY,CACuB;AACtC,OAFD,MAEK;AACDH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OADO;AAEPC,UAAAA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACmB,sBAAX;AACIP,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAOE,OAAP,CAAzB;;AACA,UAAGE,KAAK,KAAG,CAAC,CAAZ,EAAc;AACVJ,QAAAA,KAAK,CAACY,MAAN,CAAaR,KAAb,EAAmB,CAAnB;AACH;;AACDR,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AAEJ,SAAKR,KAAK,CAACqB,sBAAX;AACIT,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAOE,OAAP,CAAzB;;AACA,UAAGE,KAAK,KAAG,CAAC,CAAZ,EAAc;AACVJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,GAAwBA,QAAxB;AACH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ;AAAS,aAAO,CAAC,GAAGA,KAAJ,CAAP;AA5Bb;AA8BH,CAjCD;;AAkCA,IAAIO,iBAAiB,GAAG,CAACR,IAAD,EAAMG,OAAN,KAAiB;AAErC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AACA,MAAGL,IAAI,CAACe,MAAL,GAAa,CAAhB,EAAkB;AACd,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAChB,IAAI,CAACe,MAAnB,EAA0BC,CAAC,EAA3B,EAA8B;AAC1B,UAAGhB,IAAI,CAACgB,CAAD,CAAJ,CAAQb,OAAR,CAAgBc,EAAhB,KAAuBd,OAAO,CAACc,EAAlC,EAAqC;AACjCZ,QAAAA,KAAK,GAAGW,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAOX,KAAP;AACH,CAZD;;AAaA,eAAeL,IAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n    var { product, quantity} = action;\n    var index = -1; //khong tim thay\n    switch (action.type) {\n        case types.ADD_TO_CART:\n            index = findProductInCart(state,product);\n            if(index !== -1){\n                state[index].quantity += quantity; //neu co roi thi tang so luong\n            }else{\n                state.push({\n                    product,\n                    quantity\n                });\n            }\n            localStorage.setItem('CART', JSON.stringify(state));\n            return [...state];\n        case types.DELETE_PRODUCT_IN_CART:\n            index = findProductInCart(state,product);\n            if(index!==-1){\n                state.splice(index,1);\n            }\n            localStorage.setItem('CART', JSON.stringify(state));\n            return [...state];\n\n        case types.UPDATE_PRODUCT_IN_CART:\n            index = findProductInCart(state,product);\n            if(index!==-1){\n                state[index].quantity = quantity;\n            }\n            localStorage.setItem('CART', JSON.stringify(state));\n            return [...state];\n        default: return [...state];\n    }\n}\nvar findProductInCart = (cart,product) =>{\n\n    var index = -1;\n    if(cart.length >0){\n        for(var i=0;i<cart.length;i++){\n            if(cart[i].product.id === product.id){\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}