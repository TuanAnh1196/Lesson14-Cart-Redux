{"ast":null,"code":"var _jsxFileName = \"/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Lesson14-Cart-Redux/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport * as Message from './../constants/Message';\nimport { actDeleteProductInCart, actChangeMessage, actUpdateProductInCart } from '../actions';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var _this$props = this.props,\n          onDeleteProductInCart = _this$props.onDeleteProductInCart,\n          onChangeMessage = _this$props.onChangeMessage,\n          onUpdateProductInCart = _this$props.onUpdateProductInCart;\n      var result = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, Message.MSG_CART_EMPTY));\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return React.createElement(CartItem, {\n            key: index,\n            item: item,\n            index: index,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            onUpdateProductInCart: onUpdateProductInCart,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = React.createElement(CartResult, {\n          cart: cart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var cart = this.props.cart;\n    return React.createElement(Cart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.showCartItem(cart), this.showTotalAmount(cart));\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    products: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    })).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    },\n    onUpdateProductInCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Lesson14-Cart-Redux/src/containers/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartItem","CartResult","Message","actDeleteProductInCart","actChangeMessage","actUpdateProductInCart","CartContainer","showCartItem","cart","props","onDeleteProductInCart","onChangeMessage","onUpdateProductInCart","result","MSG_CART_EMPTY","length","map","item","index","showTotalAmount","render","propTypes","arrayOf","shape","products","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch","product","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport CartItem from './../components/CartItem';\nimport CartResult from './../components/CartResult';\nimport * as Message from './../constants/Message';\nimport { actDeleteProductInCart, actChangeMessage, actUpdateProductInCart } from '../actions';\n\nclass CartContainer extends Component {\n    render() {\n        var { cart } = this.props;\n\n        return (\n            <Cart>\n                {this.showCartItem(cart)}\n                {this.showTotalAmount(cart)}\n            </Cart>\n        );\n\n    }\n    showCartItem = (cart) => {\n        var { onDeleteProductInCart, onChangeMessage, onUpdateProductInCart } = this.props;\n        var result = <tr><td>{Message.MSG_CART_EMPTY}</td></tr>;\n        if (cart.length > 0) {\n            result = cart.map((item, index) => {\n                return (\n                    <CartItem\n                        key={index}\n                        item={item}\n                        index={index}\n                        onDeleteProductInCart={onDeleteProductInCart}\n                        onChangeMessage={onChangeMessage}\n                        onUpdateProductInCart={onUpdateProductInCart}\n                    />\n                );\n            });\n        }\n        return result;\n    }\n    showTotalAmount = (cart) => {\n        var result = null;\n        if (cart.length > 0) {\n            result = <CartResult cart={cart} />\n        }\n        return result;\n\n    }\n}\n\nCartContainer.propTypes = {\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        products: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string.isRequired,\n                image: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n                price: PropTypes.number.isRequired,\n                inventory: PropTypes.number.isRequired,\n                rating: PropTypes.number.isRequired,\n            })\n        ).isRequired,\n        quantity: PropTypes.number.isRequired,\n    })\n    ).isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.cart\n    };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onDeleteProductInCart: (product) => {\n            dispatch(actDeleteProductInCart(product));\n        },\n        onChangeMessage: (message) => {\n            dispatch(actChangeMessage(message));\n        },\n        onUpdateProductInCart: (product, quantity) => {\n            dispatch(actUpdateProductInCart(product, quantity));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}